# -*- coding: utf-8 -*-
"""Tablice_i_macierze

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i-jIN_dXYywg5NJDjoEZesvpfyErXJ09
"""

import numpy as np

# Utwórz tablicę zawierającą 10 zer
zeros = np.zeros(10)
print(zeros) 

# Utwórz tablicę zawierającą 10 piątek
fives = np.full((10),5) 
print(fives)

# Utwórz tablicę zawierającą liczby od 10 do 50
tenToFifty = []
for i in range(10,51):
    tenToFifty.append(i)
print(f'tenToFifty = {tenToFifty}')

# Utwórz macierz (tablica wielowymiarowa) o wymiarach 3x3 zawierającą liczby od 0 do 8
multi = np.random.randint(0, 9, [3, 3])
multi = np.mat(multi)
print(multi)

# Utwórz macierz jednostkową o wymiarach 3x3
array =np.eye(3,3)
print(array)

# Utwórz macierz o wymiarach 5x5 zawierającą liczby z dystrybucji normalnej (Gaussa),
gauss = np.random.laplace(0,15,25)
array = np.mat(gauss)
print(array)

# Utwórz macierz o wymiarach 10x10 zawierającą liczby od 0,01 do 1 z krokiem 0,01,
numb = np.arange(0.01, 1, 0.1)
array = np.random.choice(numb, (10, 10))
array = np.mat(array)
print(array)

# utwórz tablicę zawierającą 20 liniowo rozłożonych liczb między 0 a 1 (włącznie z 0 i 1),
table = np.linspace(0,1,20)
print(table)

# Utwórz tablicę zawierającą losowe liczby z przedziału (1, 25), następnie zamień ją na macierz o wymiarach 5 x 5 z tymi samymi liczbami:
table = np.random.randint(1, 26, 25)
matrix = table.reshape(5, 5)
print(matrix)

#  - oblicz sumę wszystkich liczb w ww. macierzy,
print(matrix.sum())
#  - oblicz średnią wszystkich liczb w ww. macierzy,
print(matrix.mean())
#  - oblicz standardową dewiację dla liczb w ww. macierzy,
print(matrix.std())
#  - oblicz sumę każdej kolumny ww. macierzy i zapisz ją do tablicy.
column_sum = matrix.sum(0)
print(column_sum)

# Utwórz macierz o wymiarach 5x5 zawierającą losowe liczby z przedziału (0, 100) i:
matrix = np.random.randint(0, 101, [5, 5])
print(matrix)

#  - Oblicz medianę tych liczb,
print(matrix.mean())
#  - Znajdź najmniejszą liczbę tej macierzy,
print(matrix.min())
#  - Znajdź największą liczbę tej macierzy.
print(matrix.max())

# Utwórz macierz o wymiarach różnych od siebie i większych od 1, zawierającą losowe liczby z przedziału (0, 100) i dokonaj jej transpozycji,
matrix = np.random.randint(0, 101, [3, 2])
print(matrix)
print(matrix.transpose())

# Utwórz dwie macierze o odpowiednich wymiarach (doczytać), większych od 2 i dodaj je do siebie,
a = np.random.randint(0, 101, [3, 3])
b = np.random.randint(0, 101, [3, 3])
matrixA = np.matrix(a)
matrixB = np.matrix(b)
print(matrixA + matrixB)

# Utwórz dwie macierze o odpowiednich wymiarach (doczytać) różnych od siebie i większych od 2, a następnie pomnóż je przez siebie za pomocą dwóch różnych funkcji (np. ‘matmul’ i ‘multiply’),
a = np.random.randint(0, 101, [3, 3])
b = np.random.randint(0, 101, [3, 3])
matrixA = np.matrix(a)
matrixB = np.matrix(b)
print(np.multiply(matrixA, matrixB))
print(np.matmul(matrixA, matrixB))